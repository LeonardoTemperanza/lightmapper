#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct main0_out
{
    float4 out_var_SV_TARGET [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], texture2d<float> tex [[texture(0)]], sampler tex_sampler [[sampler(0)]])
{
    main0_out out = {};
    float3 _57 = tex.sample(tex_sampler, in.in_var_TEXCOORD0).xyz * 1.0;
    float _58 = _57.x;
    float _65 = ((_58 * 0.2989999949932098388671875) + (_57.y * 0.58700001239776611328125)) + (_57.z * 0.114000000059604644775390625);
    float4 _66 = float4(_58, _57.yz, _65);
    float4 _75 = fast::clamp((_66 * ((_66 * 2.5099999904632568359375) + float4(0.02999999932944774627685546875))) / ((_66 * ((_66 * 2.4300000667572021484375) + float4(0.589999973773956298828125))) + float4(0.14000000059604644775390625)), float4(0.0), float4(1.0));
    float3 _82 = mix(_75.xyz, _75.www, float3((_65 * _65) / (12.0 + _65)));
    out.out_var_SV_TARGET = float4(mix((float3(1.05499994754791259765625) * powr(_82, float3(0.4166666567325592041015625))) - float3(0.054999999701976776123046875), _82 * float3(12.9200000762939453125), float3(_82 <= float3(0.003130800090730190277099609375))), 1.0);
    return out;
}

