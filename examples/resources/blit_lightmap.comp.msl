#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

kernel void main0(texture2d<float> input_tex [[texture(0)]], texture2d<uint> uv_map [[texture(1)]], texture2d<float, access::write> output_tex [[texture(2)]], uint3 gl_WorkGroupID [[threadgroup_position_in_grid]], uint3 gl_LocalInvocationID [[thread_position_in_threadgroup]])
{
    uint2 _40 = (gl_WorkGroupID.xy * uint2(8u)) + gl_LocalInvocationID.xy;
    uint2 _42 = uint2(input_tex.get_width(), input_tex.get_height());
    if (all(_40 < min(_42, min(_42, uint2(output_tex.get_width(), output_tex.get_height())))))
    {
        float4 _51 = input_tex.read(uint2(_40), 0u);
        float _52 = _51.w;
        float4 _59;
        if (_52 > 0.89999997615814208984375)
        {
            float4 _57 = _51 * (1.0 / _52);
            _57.w = 1.0;
            _59 = _57;
        }
        else
        {
            _59 = float4(0.0);
        }
        output_tex.write(_59, uint2(uv_map.read(uint2(_40), 0u).xy));
    }
}

